#!/bin/bash -e

# A megadott sorrendfájl sorrendje alapján elvégzi a fordítást a forrasok mappába elhelyezett
# ubék használatával. Ha talál az ubrend fájlban felsorolt mappát, akkor azt a fordítási mappába helyezi,
# majd elvégzi a fordítást. Ha sikeres, akkor áthelyezi ezt a mappát a keszek mappába, és próbálkozik az
# ubrend fájlban lévő következő elemmel.
# Ha nem sikerül a fordítás és nem kapott a szkript "deb" parancssori paramétert, akkor áthelyezi ezt a mappát a failed
# mappába és veszi a következő ubrend elemét.
# Ha nem sikerül a fordítás és deb parancssori paramétert kapott, akkor leáll a szkript.
# 32 bites fordításhoz meg kell adni egy "32" paramétert.

function hiba () {
	echo 'Használat: sorfordit <sorrendfájl> [la|32|deb] [la|32|deb] [la|32|deb] '
	echo 'Ha valamelyik paraméter 32, akkor 32 bites fordítás lesz'
	echo 'Ha valamelyik paraméter "deb", akkor a fordítási sorozat hiba esetén leáll'
	echo 'valamelyik paraméter "la", akkor a fordítás során a *.la fájlok megmaradnak'
	exit 1
}

function keepla {
    steps="1 2 3"
    for step in $steps ;do
    cleanupfile="/var/uhubuild/$diszt/amd64/chroot$step/usr/lib/uhubuild/steps/cleanup"
        if [ -f $cleanupfile ];then
            sed 's%# .la%exit 0%' -i $cleanupfile
        fi
    done
}

function della {
    steps="1 2 3"
    for step in $steps ;do
    cleanupfile="/var/uhubuild/$diszt/amd64/chroot$step/usr/lib/uhubuild/steps/cleanup"
        if [ -f $cleanupfile ];then
            sed 's%exit 0%# .la%' -i $cleanupfile
        fi
    done
}

# csak a fordítási mappában megy és színes
. disztbe

workdir=`pwd`

if [ -z "$1" ];then
    pirosecho "Parancssori paraméter kell!"
    hiba
else
    sorfile=$1
    sorrendfile=$workdir/$sorfile
fi
if [ ! -f $sorrendfile ];then
    pirosecho "Nincs $sorfile nevű fordítási sorrendfájl"
    hiba
fi

if [ "$2" == "32" ] || [ "$3" == "32" ] || [ "$4" == "32" ] ;then
    archdir=i386
    arch=32
    if [[ "$diszt" > "UBK2" ]];then
        pirosecho "32 bites fordítás csak UBK1/UBK2 esetén végezhető!"
        hiba
    fi

else
    archdir=amd64
    arch=64
fi

debug=""
if [ "$2" == "deb" ] || [ "$3" == "deb" ] || [ "$4" == "deb" ];then
    debug=debug
fi

if [ "$2" == "la" ] || [ "$3" == "la" ] || [ "$4" == "la" ];then
    lakell="la"
fi

forrdir=$workdir/forrasok
pkgdir=/usr/src/UHUBUILD/packages-$diszt
faileddir=$workdir/failed
celdir=$workdir/keszek

if [ ! -d $forrdir ];then
    pirosecho "Nincs $forrdir mappa"
    hiba
fi

if [ -z "$(ls -A $forrdir)" ]; then
    pirosecho "A $forrdir mappa üres"
    hiba
fi

# Mappagyártás, ha nincs
if [ -d $celdir ];then
    mkdir -p $celdir
fi
if [ -d $faileddir ];then
    mkdir -p $faileddir
fi
if [ -f /usr/bin/build-$diszt ];then
    disztem=$diszt
else
    disztem=$kisdiszt
fi
for i in `cat $sorrendfile`; do
    if [ -d $forrdir/$i ]; then
        mv $forrdir/$i ./
        rm -f /usr/src/UHUBUILD/misc-$diszt/failed/$archdir/$i
        set +e
        della
        if [ "$lakell" == "la" ];then
            keepla
        fi
        build-$disztem -ns -$arch $i
            della
        if [ ! "$debug" ];then
            if [ -f /usr/src/UHUBUILD/misc-$diszt/failed/$archdir/$i ]; then
                mv $i $faileddir/
            else
                mv $i $celdir/
            fi
        else
            if [ -f /usr/src/UHUBUILD/misc-$diszt/failed/$archdir/$i ]; then
                exit 1
            else
                mv $i $celdir/
            fi
        fi
        set -e
        rm -rf $pkgdir/ub
    fi
done
kekecho "A $forrdir mappa nem tartalmaz a(z) $sorfile szerint fordítható elemet."
